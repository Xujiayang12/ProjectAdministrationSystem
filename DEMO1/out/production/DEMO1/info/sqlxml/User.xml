<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2012 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">

    <resultMap type="info.User" id="UserResult">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="classroom" jdbcType="VARCHAR" property="classroom"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="admin" jdbcType="INTEGER" property="admin"/>
        <result column="project" jdbcType="INTEGER" property="project"/>
    </resultMap>

    <select id="loginCheck" parameterType="info.User" resultMap="UserResult">
    SELECT * FROM user WHERE account = #{account:VARCHAR} AND password = #{password:VARCHAR}
  </select>

    <select id="isAccountExist" parameterType="info.User" resultMap="UserResult">
    SELECT * FROM user WHERE account = #{account:VARCHAR}
  </select>

    <select id="findAll" parameterType="info.User"  resultMap="UserResult">
    SELECT * FROM user
  </select>

    <select id="findById" parameterType="int" resultMap="UserResult">
    SELECT * FROM user where id = #{id:INTEGER}
  </select>

    <select id="findByAccount" parameterType="String" resultMap="UserResult">
    SELECT * FROM user where account = #{account:VARCHAR}
  </select>

    <insert id="signUp" parameterType="info.User">
    INSERT INTO user (account, name, password, classroom, qq, phone, admin, project) VALUES (#{account},#{name},#{password},#{classroom},#{qq},#{phone},0,0)
  </insert>

    <delete id="deleteById" parameterType="int">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <delete id="deleteByAccount" parameterType="String" >
        DELETE FROM user WHERE account = #{account}
    </delete>

    <update id="updateById" parameterType="info.User">
        UPDATE user set name = #{name},password = #{password},classroom = #{classroom},qq = #{qq},phone = #{phone},admin = #{admin},project = #{project} where id = #{id};
    </update>

    <update id="updateByAccount" parameterType="info.User">
        UPDATE user set name = #{name},password = #{password},classroom = #{classroom},qq = #{qq},phone = #{phone},admin = #{admin},project = #{project} where account = #{account};
    </update>
    <!--<select id="version" parameterType="long" resultType="int">-->
    <!--SELECT version FROM user WHERE id = #{id,jdbcType=INTEGER}-->
    <!--</select>-->
    <!--WHERE account = #{account:VARCHAR} AND password = #{password:VARCHAR}-->
    <!--<delete id="delete" parameterType="UserAlias">-->
    <!--DELETE FROM user WHERE id = #{id:INTEGER}-->
    <!--</delete>-->

    <!--<insert id="insert" parameterType="UserAlias" useGeneratedKeys="false">-->
    <!--INSERT INTO user-->
    <!--( id,-->
    <!--username,-->
    <!--password,-->
    <!--administrator-->
    <!--)-->
    <!--VALUES-->
    <!--( #{id},-->
    <!--#{username,jdbcType=VARCHAR},-->
    <!--#{password.encrypted:VARCHAR},-->
    <!--#{administrator,jdbcType=BOOLEAN}-->
    <!--)-->
    <!--</insert>-->

    <!--<update id="update" parameterType="UserAlias">-->
    <!--UPDATE user SET-->
    <!--username = #{username,jdbcType=VARCHAR},-->
    <!--password = #{password.encrypted,jdbcType=VARCHAR},-->
    <!--administrator = #{administrator,jdbcType=BOOLEAN}-->
    <!--WHERE-->
    <!--id = #{id,jdbcType=INTEGER}-->
    <!--</update>-->

    <!--&lt;!&ndash;   Unique constraint check &ndash;&gt;-->
    <!--<select id="isUniqueUsername" parameterType="map" resultType="boolean">-->
    <!--SELECT (count(*) = 0)-->
    <!--FROM user-->
    <!--WHERE ((#{userId,jdbcType=BIGINT} IS NOT NULL AND id != #{userId,jdbcType=BIGINT}) OR #{userId,jdbcType=BIGINT} IS-->
    <!--NULL)  &lt;!&ndash; other than me &ndash;&gt;-->
    <!--AND (username = #{username,jdbcType=VARCHAR})-->
    <!--</select>-->
</mapper>
